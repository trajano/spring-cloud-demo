scrape_configs:
  # Make Prometheus scrape itself for metrics.
  - job_name: "prometheus"
    static_configs:
      - targets: [ "localhost:9090" ]

  # Create a job for Docker Swarm containers.
  #
  # This example works with cadvisor deployed with:
  # docker service create --name cadvisor -l prometheus-job=cadvisor
  #     --mode=global --publish published=8080,target=8080,mode=host
  #     --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock,ro
  #     --mount type=bind,src=/,dst=/rootfs,ro
  #     --mount type=bind,src=/var/run,dst=/var/run
  #     --mount type=bind,src=/sys,dst=/sys,ro
  #     --mount type=bind,src=/var/lib/docker,dst=/var/lib/docker,ro
  #     google/cadvisor -docker_only
  - job_name: "dockerswarm"
    dockerswarm_sd_configs:
      #      - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
      - host: http://daemon:2375
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [ __meta_dockerswarm_task_desired_state ]
        regex: running
        action: keep
      # Only keep containers that have a `prometheus-job` label.
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_path ]
        regex: .+
        action: keep

      # Obtain the network name
      - source_labels: [ __meta_dockerswarm_network_name ]
        regex: "[^_]+_(.+)"
        target_label: __network_name
        replacement: $1
        action: replace

      - source_labels: [ __meta_dockerswarm_service_label_prometheus_network ]
        target_label: __network_name
        action: keepequal

      - target_label:  __port__
        replacement: 8080
        action: replace

      - source_labels: [__meta_dockerswarm_service_label_prometheus_port]
        regex: (\d+)
        target_label:  __port__
        replacement: $1
        action: replace

      # Use the task labels that are prefixed by `prometheus-`.
      - source_labels: [ __meta_dockerswarm_service_name ]
        target_label: service
        action: replace
      - source_labels: [ __address__ ]
        target_label: __address__
        regex: (.+):(\d+)
        replacement: $1
        action: replace
      - source_labels: [ __address__, __port__ ]
        target_label: __address__
        regex: (.+);(\d+)
        replacement: $1:$2
        action: replace
      - source_labels: [ __meta_dockerswarm_service_label_prometheus_path ]
        target_label: __metrics_path__
        replacement: $1
        action: replace

#      - regex: __meta_dockerswarm_service_label_prometheus_(.+)
#        action: labelmap
#        replacement: $1
