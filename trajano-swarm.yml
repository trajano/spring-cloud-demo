version: "3.7"
services:
  configserver:
    # image: trajano/cloud-config
    image: springcloud/configserver
    environment:
      SPRING_ZIPKIN_BASE-URL: http://tracing:9411/
      SPRING_ZIPKIN_SERVICE_NAME: config
      SPRING_PROFILES_ACTIVE: native
    networks:
      - default
      - intranet
    volumes:
      - /d/p/spring-cloud-demo/cloud-config/src/main/resources/config:/config:ro
    deploy:
      replicas: 2
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
      labels:
        - spring.service.discoverable=true
        - spring.service.port=8888
        - spring.gateway.expose=false
#        - intranet=true
#        - traefik.enable=true
#        - traefik.http.routers.config.middlewares=strip-prefix@file
#        - traefik.http.services.config.loadbalancer.server.port=8080
  api:
    image: trajano/cloud-gateway
    environment:
      # - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
      - SPRING_CLOUD_CONFIG_FAILFAST=true
      - SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 3211:8080
    networks:
      - default
      - intranet
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 60s
        max_attempts: 1
      labels:
        - intranet=true
        - traefik.enable=true
        - traefik.http.routers.api.rule=PathPrefix(`/v1`)
        - traefik.http.routers.api.middlewares=strip-prefix@file
        - traefik.http.services.api.loadbalancer.server.port=8080
  vue:
    image: trajano/cloud-vue-app
    networks:
      - intranet
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 60s
        max_attempts: 1
      labels:
        - intranet=true
        - traefik.enable=true
        - traefik.http.routers.vue.rule=PathPrefix(`/`)
        - traefik.http.services.vue.loadbalancer.server.port=80
#  vue:
#    image: node:lts
#    networks:
#      - intranet
#    volumes:
#      - /d/p/spring-cloud-demo/vue-app:/work
#    command: >
#      bash -c "cd /work
#      && npm run serve"
#    deploy:
#      replicas: 1
#      update_config:
#        order: start-first
#      restart_policy:
#        condition: any
#        delay: 60s
#        max_attempts: 1
#      labels:
#        - intranet=true
#        - traefik.enable=true
#        - traefik.http.routers.vue.rule=PathPrefix(`/`)
#        - traefik.http.services.vue.loadbalancer.server.port=8080
  tracing:
    image: alpine/socat
    command: tcp-listen:9411,fork TCP:zipkin:9411
    healthcheck:
      test: socat /dev/null TCP:zipkin:9411
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
      labels:
        - spring.service.discoverable=true
        - spring.gateway.expose=false
    networks:
      - default
      - management
  auth:
    image: trajano/cloud-auth
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=keycloakdb
      - DB_USER=keycloak
      - DB_PASSWORD=password
      - KEYCLOAK_FRONTEND_URL=https://i.trajano.net/auth
    ports:
      - 3111:8080
    networks:
      - default
      - intranet
      - auth
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 500m
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 1
      labels:
        - intranet=true
        - traefik.enable=true
        - traefik.http.routers.auth.rule=PathPrefix(`/auth`)
        - traefik.http.services.auth.loadbalancer.server.port=8080
#  auth-admin:
#    image: trajano/cloud-auth
#    environment:
#      - DB_VENDOR=postgres
#      - DB_ADDR=keycloakdb
#      - DB_USER=keycloak
#      - DB_PASSWORD=password
#    networks:
#      - default
#      - auth
#    ports:
#      - 3111:8080
#    deploy:
#      replicas: 1
#      resources:
#        limits:
#          memory: 500m
#      restart_policy:
#        condition: any
#        delay: 10s
#        max_attempts: 1
#  #    volumes:
#  #      - /var/run/docker.sock:/var/run/docker.sock:ro
  keycloakdb:
    image: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    networks:
      - auth
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 1
#      labels:
#        - spring.service.discoverable=true
  #    volumes:
  #      - /var/run/docker.sock:/var/run/docker.sock:ro
  sample:
    image: trajano/sample-service
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://configserver:8888
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 1
      labels:
        - spring.service.discoverable=true
#  uaa:
#    image: cfidentity/uaa

  whoami:
    image: containous/whoami
    deploy:
      replicas: 2
      endpoint_mode: dnsrr
      resources:
        limits:
          cpus: '0.5'
          memory: 32M
      labels:
        - spring.service.discoverable=true
        - spring.service.port=80

networks:
  management:
    external: true
  intranet:
    external: true
  auth:
    internal: true
#volumes:
#  elasticsearch-data:
#    driver_opts:
#      type: nfs
#      o: "addr=192.168.1.1,rw,nfsvers=3"
#      device: ":/mnt/sda1/elasticsearch"
