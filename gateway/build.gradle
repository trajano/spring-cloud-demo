plugins {
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'net.trajano.swarm.conventions'
    id 'jacoco'
    id "com.diffplug.spotless"
}

group = 'net.trajano.swarm'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'io.awspring.cloud:spring-cloud-aws-autoconfigure:2.4.2'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation "io.grpc:grpc-api"
    implementation "io.grpc:grpc-netty"
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-services"
    implementation "io.zipkin.brave:brave-instrumentation-grpc"
    implementation 'com.google.protobuf:protobuf-java-util:3.21.9'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'com.github.docker-java:docker-java-core'
    constraints {
        implementation('commons-io:commons-io:2.11.0')
    }
    implementation 'com.github.docker-java:docker-java-transport-httpclient5'
    compileOnly 'org.projectlombok:lombok'
    implementation 'dnsjava:dnsjava:3.5.2'
    implementation project(':gateway-common')
    implementation project(':logging')
    implementation 'org.bouncycastle:bcprov-jdk18on:1.72'

    //	runtimeOnly 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "io.grpc:grpc-bom:${grpcVersion}"
        mavenBom "com.github.docker-java:docker-java-bom:3.3.0"
    }
}

repositories {
    mavenCentral()
}

tasks.named('test') {

    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    //	builder = 'paketobuildpacks/builder:tiny'
    // environment = ['BP_NATIVE_IMAGE': 'true']
}
