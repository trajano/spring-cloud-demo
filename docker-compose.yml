version: "3.8"
services:
  gateway:
    build:
      context: .
      target: gateway
    image: local/gateway
    environment:
      - SPRING_REDIS_HOST=redis
      - DOCKER_DISCOVERY_SWARMMODE=true
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=debug
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_SLEUTH=warn
    ports:
      - 28080:8080
    deploy:
      update_config:
#        order: start-first
        failure_action: pause
#        parallelism: 1
      restart_policy:
        max_attempts: 1
      replicas: 1

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - services
      - default
  redis:
    image: redis:6
  sample:
    build:
      context: .
      target: sample-service
    image: local/sample-service
    labels:
      docker.ids: sample
      docker.sample.path: /sample
      docker.sample.path.regexp: /sample/(?<remaining>.*)
      docker.sample.path.replacement: /$${remaining}
    networks:
      - services
  whoami:
    image: containous/whoami
    deploy:
      labels:
        docker.ids: whoami
        docker.whoami.path: /whoami/**
        docker.whoami.port: 80
      replicas: 20
      endpoint_mode: dnsrr
    labels:
      docker.ids: whoami
      docker.whoami.path: /whoami/**
      docker.whoami.path.replacement: /$${remaining}
    networks:
      - services
  whoami2:
    image: containous/whoami
    deploy:
      labels:
        docker.ids: whoami2
        docker.whoami2.path: /whoami2/**
        docker.whoami2.path.replacement: /$${remaining}
        docker.whoami2.port: 80
      replicas: 3
      endpoint_mode: vip
    networks:
      - services
  whoami3:
    image: containous/whoami
    deploy:
      labels:
        docker.ids: whoami3
        docker.whoami3.path: /whoami3/**
        docker.whoami3.path.replacement: /$${remaining}
        docker.whoami3.port: 80
      replicas: 0
      endpoint_mode: vip
    networks:
      - services
networks:
  services:
    name: services